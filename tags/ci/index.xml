<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CI on Yevhen Lebid&#39;s website</title>
    <link>https://ealebed.github.io/tags/ci/</link>
    <description>Recent content in CI on Yevhen Lebid&#39;s website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 09 Feb 2020 10:34:59 +0200</lastBuildDate><atom:link href="https://ealebed.github.io/tags/ci/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gradle запуск checkstyle только на измененных файлах</title>
      <link>https://ealebed.github.io/posts/2020/gradle-checkstyle-on-changed-files-only/</link>
      <pubDate>Sun, 09 Feb 2020 10:34:59 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2020/gradle-checkstyle-on-changed-files-only/</guid>
      <description>&lt;p&gt;В одной из предыдущих статей мы уже рассматривали настройку &lt;a href=&#34;https://ealebed.github.io/posts/2019/gradle-checkstyle-plugin/&#34;&gt;плагина checkstyle&lt;/a&gt; для статического анализа кода на языке Java, однако теперь требования усложнились - необходимо проводить анализ только действительно измененных файлов, а не всего содержимого проекта. Давайте разберемся!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Deploy to k8s with Spinnaker. Часть 1: Установка</title>
      <link>https://ealebed.github.io/posts/2019/deploy-to-k8s-with-spinnaker-%D1%87%D0%B0%D1%81%D1%82%D1%8C-1-%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0/</link>
      <pubDate>Thu, 24 Jan 2019 11:59:25 +0300</pubDate>
      
      <guid>https://ealebed.github.io/posts/2019/deploy-to-k8s-with-spinnaker-%D1%87%D0%B0%D1%81%D1%82%D1%8C-1-%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0/</guid>
      <description>&lt;p&gt;Spinnaker - мультиоблачная платформа для непрерывной доставки (continuous delivery) с открытым исходным кодом (open-source) от разработчиков Netflix. Платформа предназначена для управления и деплоя приложений в AWS EC2, Kubernetes, GCE, GKE, GAE, Microsoft Azure и Openstack. Давайте разберемся!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gradle Checkstyle plugin</title>
      <link>https://ealebed.github.io/posts/2019/gradle-checkstyle-plugin/</link>
      <pubDate>Tue, 08 Jan 2019 06:50:42 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2019/gradle-checkstyle-plugin/</guid>
      <description>&lt;p&gt;Возникла необходимость настроить статический анализ кода (&lt;a href=&#34;http://checkstyle.sourceforge.net/index.html&#34;&gt;checkstyle&lt;/a&gt;) для проекта на языке Java. Давайте разберемся!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Сборка проектов с помощью Gradle</title>
      <link>https://ealebed.github.io/posts/2019/%D1%81%D0%B1%D0%BE%D1%80%D0%BA%D0%B0-%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%BE%D0%B2-%D1%81-%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C%D1%8E-gradle/</link>
      <pubDate>Thu, 03 Jan 2019 06:19:13 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2019/%D1%81%D0%B1%D0%BE%D1%80%D0%BA%D0%B0-%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%BE%D0%B2-%D1%81-%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C%D1%8E-gradle/</guid>
      <description>&lt;p&gt;На просторах Интернета существует множество статей и видеоуроков (как платных, так и бесплатных) о том, как установить Gradle, написать собственную конфигурацию сборки (файл &lt;code&gt;build.gradle&lt;/code&gt;) и, наконец, собрать Java-приложение с помощью Gradle. В данной статье мы не будем рассматривать эти простейшие вещи, а разберемся как следовать принципу DRY (Don’t Repeat Yourself) при работе с большим количеством схожих проектов!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jenkins as a code. Часть 4</title>
      <link>https://ealebed.github.io/posts/2018/jenkins-as-a-code-%D1%87%D0%B0%D1%81%D1%82%D1%8C-4/</link>
      <pubDate>Mon, 10 Sep 2018 07:08:19 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2018/jenkins-as-a-code-%D1%87%D0%B0%D1%81%D1%82%D1%8C-4/</guid>
      <description>&lt;p&gt;Возникла необходимость разграничения прав доступа пользователей на Jenkins-сервере - давайте разберемся, как можно это сделать без использования webUI!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jenkins as a code. Часть 3</title>
      <link>https://ealebed.github.io/posts/2018/jenkins-as-a-code-%D1%87%D0%B0%D1%81%D1%82%D1%8C-3/</link>
      <pubDate>Mon, 03 Sep 2018 07:02:21 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2018/jenkins-as-a-code-%D1%87%D0%B0%D1%81%D1%82%D1%8C-3/</guid>
      <description>&lt;p&gt;В данной статье цикла &amp;ldquo;Jenkins as a code&amp;rdquo; рассмотрим самый интересный (и полезный) пример - автоматическое создание задач (job) при запуске сервиса. Давайте разберемся!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jenkins as a code. Часть 2</title>
      <link>https://ealebed.github.io/posts/2018/jenkins-as-a-code-%D1%87%D0%B0%D1%81%D1%82%D1%8C-2/</link>
      <pubDate>Mon, 20 Aug 2018 07:04:45 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2018/jenkins-as-a-code-%D1%87%D0%B0%D1%81%D1%82%D1%8C-2/</guid>
      <description>&lt;p&gt;В &lt;a href=&#34;https://ealebed.github.io/posts/2018/jenkins-as-a-code-%D1%87%D0%B0%D1%81%D1%82%D1%8C-1/&#34;&gt;первой статье&lt;/a&gt; цикла &amp;ldquo;Jenkins as a code&amp;rdquo; мы разобрали несколько примеров настройки экземпляра Jenkins под собственные нужды, в данной статье рассмотрим автоматическую настройку общих библиотек (&lt;a href=&#34;https://ealebed.github.io/posts/2018/jenkins-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-shared-libraries/&#34;&gt;Shared Libraries&lt;/a&gt;) - давайте разберемся!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jenkins as a code. Часть 1</title>
      <link>https://ealebed.github.io/posts/2018/jenkins-as-a-code-%D1%87%D0%B0%D1%81%D1%82%D1%8C-1/</link>
      <pubDate>Mon, 06 Aug 2018 07:08:20 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2018/jenkins-as-a-code-%D1%87%D0%B0%D1%81%D1%82%D1%8C-1/</guid>
      <description>&lt;p&gt;Идея &amp;ldquo;инфраструктура как код&amp;rdquo; далеко не нова и широко используется в повседневной жизни большинством компаний. В серии статей &amp;ldquo;Jenkins as a code&amp;rdquo; предлагаю разобраться с автоматическим развертыванием и настройкой сервера Jenkins!&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jenkins: использование shared libraries</title>
      <link>https://ealebed.github.io/posts/2018/jenkins-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-shared-libraries/</link>
      <pubDate>Mon, 30 Jul 2018 07:04:56 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2018/jenkins-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-shared-libraries/</guid>
      <description>&lt;p&gt;При использовании Jenkins в компании с большим количеством проектов, рано или поздно вы заметите, что ваши описания пайплайнов (Pipeline) имеют много общего. И, возможно, вам захочется избавиться от избыточности и следовать принципу DRY (Don&amp;rsquo;t Repeat Yourself) - давайте разберемся!&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
