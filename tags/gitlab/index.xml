<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gitlab on Yevhen Lebid&#39;s website</title>
    <link>https://ealebed.github.io/tags/gitlab/</link>
    <description>Recent content in Gitlab on Yevhen Lebid&#39;s website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 04 Dec 2017 10:39:24 +0200</lastBuildDate>
    
	<atom:link href="https://ealebed.github.io/tags/gitlab/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GitLab CI: deploy на docker swarm</title>
      <link>https://ealebed.github.io/posts/2017/gitlab-ci-deploy-%D0%BD%D0%B0-docker-swarm/</link>
      <pubDate>Mon, 04 Dec 2017 10:39:24 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/gitlab-ci-deploy-%D0%BD%D0%B0-docker-swarm/</guid>
      <description>&lt;p&gt;В цикле о &lt;strong&gt;настройке GitLab continuous integration&lt;/strong&gt; мы подробно рассматривали &lt;a href=&#34;https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-9-%D1%8D%D1%82%D0%B0%D0%BF-deploy-%D0%B2-.gitlab-ci.yml/&#34;&gt;этап деплоя docker-образов&lt;/a&gt; на ревью окружение; чуть позже скрипт деплоя был изменен для достижения &lt;a href=&#34;https://ealebed.github.io/posts/gitlab-ci-zero-downtime-docker-deployment/&#34;&gt;zero downtime&lt;/a&gt; (избавления от простоя).&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitLab CI: Чем проще .gitlab-ci.yml, тем лучше</title>
      <link>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B5%D0%BC-%D0%BF%D1%80%D0%BE%D1%89%D0%B5-.gitlab-ci.yml-%D1%82%D0%B5%D0%BC-%D0%BB%D1%83%D1%87%D1%88%D0%B5/</link>
      <pubDate>Mon, 27 Nov 2017 10:38:37 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B5%D0%BC-%D0%BF%D1%80%D0%BE%D1%89%D0%B5-.gitlab-ci.yml-%D1%82%D0%B5%D0%BC-%D0%BB%D1%83%D1%87%D1%88%D0%B5/</guid>
      <description>&lt;p&gt;В &lt;a href=&#34;https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-10-%D1%8D%D1%82%D0%B0%D0%BF-cleanup-%D0%B2-.gitlab-ci.yml/&#34;&gt;статье&lt;/a&gt;, завершающей &lt;strong&gt;цикл о настройке Gitlab CI&lt;/strong&gt; (continuous integration) была приведена в качестве примера финальная, полностью рабочая версия конфигурационного файла &lt;code&gt;.gitlab-ci.yml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Верификация коммитов в GitLab 9.5.x</title>
      <link>https://ealebed.github.io/posts/2017/%D0%B2%D0%B5%D1%80%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D1%8F-%D0%BA%D0%BE%D0%BC%D0%BC%D0%B8%D1%82%D0%BE%D0%B2-%D0%B2-gitlab-9.5.x/</link>
      <pubDate>Mon, 23 Oct 2017 08:37:03 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/%D0%B2%D0%B5%D1%80%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D1%8F-%D0%BA%D0%BE%D0%BC%D0%BC%D0%B8%D1%82%D0%BE%D0%B2-%D0%B2-gitlab-9.5.x/</guid>
      <description>&lt;p&gt;В &lt;strong&gt;GitLab&lt;/strong&gt; последней версии (на момент написания статьи 9.5) появилось важное нововведение — &lt;strong&gt;верификация подписанных коммитов&lt;/strong&gt;. Теперь у всех коммитов с подписью GPG будет отображаться статус их верификации рядом с автором коммита.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitLab CI: Анализ кода</title>
      <link>https://ealebed.github.io/posts/2017/gitlab-ci-%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7-%D0%BA%D0%BE%D0%B4%D0%B0/</link>
      <pubDate>Thu, 24 Aug 2017 14:52:00 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/gitlab-ci-%D0%B0%D0%BD%D0%B0%D0%BB%D0%B8%D0%B7-%D0%BA%D0%BE%D0%B4%D0%B0/</guid>
      <description>&lt;p&gt;Ранее в цикле статей о настройке процесса &lt;strong&gt;continuous integration в GitLab&lt;/strong&gt; мы рассматривали &lt;a href=&#34;https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-7-%D1%8D%D1%82%D0%B0%D0%BF-test-%D0%B2-.gitlab-ci.yml/&#34;&gt;этап тестирования на примере &lt;code&gt;phpmetrics&lt;/code&gt;&lt;/a&gt; — инструмента для визуализации качества кода.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitLab CI: zero downtime docker deployment</title>
      <link>https://ealebed.github.io/posts/2017/gitlab-ci-zero-downtime-docker-deployment/</link>
      <pubDate>Thu, 13 Jul 2017 09:58:22 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/gitlab-ci-zero-downtime-docker-deployment/</guid>
      <description>&lt;p&gt;Не так много времени прошло с момента завершения цикла статей о настройке процесса &lt;strong&gt;CI (continuous integration) с помощью Gitlab&lt;/strong&gt; в реальном проекте, как мы вновь возвращаемся к данной теме.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitLab: Custom hooks</title>
      <link>https://ealebed.github.io/posts/2017/gitlab-custom-hooks/</link>
      <pubDate>Mon, 10 Jul 2017 09:58:02 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/gitlab-custom-hooks/</guid>
      <description>&lt;p&gt;В &lt;strong&gt;GitLab Enterprise Edition&lt;/strong&gt; существует довольно удобная, а порой и просто необходимая возможность дополнительной настройки правил обновления кода в репозитории под названием &lt;a href=&#34;http://docs.gitlab.com/ee/push_rules/push_rules.html&#34;&gt;Push Rules&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitLab CI: Часть 10 (финал), этап cleanup в .gitlab-ci.yml</title>
      <link>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-10-%D1%8D%D1%82%D0%B0%D0%BF-cleanup-%D0%B2-.gitlab-ci.yml/</link>
      <pubDate>Mon, 26 Jun 2017 08:32:57 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-10-%D1%8D%D1%82%D0%B0%D0%BF-cleanup-%D0%B2-.gitlab-ci.yml/</guid>
      <description>&lt;p&gt;В завершении цикла статей о настройке &lt;strong&gt;continuous integration в GitLab&lt;/strong&gt; мы рассмотрим еще один несложный, но важный этап, который позволит поддерживать в чистоте и порядке все наши сборочные контейнеры, а также увидим финальную версию конфигурационного файла &lt;code&gt;.gitlab-ci.yml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitLab CI: Часть 9, этап deploy в .gitlab-ci.yml (продолжение)</title>
      <link>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-9-%D1%8D%D1%82%D0%B0%D0%BF-deploy-%D0%B2-.gitlab-ci.yml-2/</link>
      <pubDate>Mon, 19 Jun 2017 08:31:53 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-9-%D1%8D%D1%82%D0%B0%D0%BF-deploy-%D0%B2-.gitlab-ci.yml-2/</guid>
      <description>&lt;p&gt;В данной статье цикла о continuous integration и особенностях ее реализации в &lt;strong&gt;GitLab&lt;/strong&gt; продолжаем максимально подробно разбирать этап деплоя изменений на ревью с помощью docker-образов.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitLab CI: Часть 9, этап deploy в .gitlab-ci.yml</title>
      <link>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-9-%D1%8D%D1%82%D0%B0%D0%BF-deploy-%D0%B2-.gitlab-ci.yml/</link>
      <pubDate>Thu, 15 Jun 2017 08:31:19 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-9-%D1%8D%D1%82%D0%B0%D0%BF-deploy-%D0%B2-.gitlab-ci.yml/</guid>
      <description>&lt;p&gt;В &lt;a href=&#34;https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-8-%D1%8D%D1%82%D0%B0%D0%BF-release-%D0%B2-.gitlab-ci.yml/&#34;&gt;предыдущей статье&lt;/a&gt; цикла о настройке &lt;strong&gt;GitLab continuous integration&lt;/strong&gt; мы занимались сборкой docker-образа с исходниками проекта. После сборки и загрузки docker-образа в локальный docker-registry, мы можем использовать его для деплоя на ревью (review), продакшн (production) и т. д.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitLab CI: Часть 8, этап release в .gitlab-ci.yml</title>
      <link>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-8-%D1%8D%D1%82%D0%B0%D0%BF-release-%D0%B2-.gitlab-ci.yml/</link>
      <pubDate>Mon, 12 Jun 2017 08:30:43 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-8-%D1%8D%D1%82%D0%B0%D0%BF-release-%D0%B2-.gitlab-ci.yml/</guid>
      <description>&lt;p&gt;В продолжении цикла о настройке &lt;strong&gt;GitLab CI&lt;/strong&gt; после этапов сборки и тестирования проекта мы рассмотрим этап подготовки docker-образа с исходниками и его загрузку в локальный docker-registry.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitLab CI: Часть 7, этап test в .gitlab-ci.yml</title>
      <link>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-7-%D1%8D%D1%82%D0%B0%D0%BF-test-%D0%B2-.gitlab-ci.yml/</link>
      <pubDate>Thu, 08 Jun 2017 08:30:13 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-7-%D1%8D%D1%82%D0%B0%D0%BF-test-%D0%B2-.gitlab-ci.yml/</guid>
      <description>&lt;p&gt;Продолжаем цикл статей о настройке процесса &lt;strong&gt;continuous integration в GitLab&lt;/strong&gt; — теперь, благодаря использованию &lt;a href=&#34;https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-6-%D1%8D%D1%82%D0%B0%D0%BF-build-%D0%B2-.gitlab-ci.yml-2/&#34;&gt;артефактов&lt;/a&gt;, мы можем передать на этап тестирования все файлы, созданные на этапе сборки проекта.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitLab CI: Часть 6, этап build в .gitlab-ci.yml (второй подход)</title>
      <link>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-6-%D1%8D%D1%82%D0%B0%D0%BF-build-%D0%B2-.gitlab-ci.yml-2/</link>
      <pubDate>Thu, 01 Jun 2017 08:29:35 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-6-%D1%8D%D1%82%D0%B0%D0%BF-build-%D0%B2-.gitlab-ci.yml-2/</guid>
      <description>&lt;p&gt;В &lt;a href=&#34;https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-5-%D1%8D%D1%82%D0%B0%D0%BF-build-%D0%B2-.gitlab-ci.yml-1/&#34;&gt;предыдущей статье&lt;/a&gt; из цикла о &lt;strong&gt;настройке continuous integration в GitLab&lt;/strong&gt; мы настроили первую работоспособную версию этапа сборки (&lt;code&gt;build&lt;/code&gt;) проекта, однако в ней было два проблемных момента, которые мы подробоно разберем и устраним в данной статье.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitLab CI: Часть 5, этап build в .gitlab-ci.yml (первый подход)</title>
      <link>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-5-%D1%8D%D1%82%D0%B0%D0%BF-build-%D0%B2-.gitlab-ci.yml-1/</link>
      <pubDate>Mon, 29 May 2017 16:25:44 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-5-%D1%8D%D1%82%D0%B0%D0%BF-build-%D0%B2-.gitlab-ci.yml-1/</guid>
      <description>&lt;p&gt;В &lt;a href=&#34;https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-4-%D1%8D%D1%82%D0%B0%D0%BF-spawn-%D0%B2-.gitlab-ci.yml/&#34;&gt;предыдущей статье&lt;/a&gt; цикла о &lt;strong&gt;настройке continuous integration в GitLab&lt;/strong&gt; мы подробно рассмотрели первый этап (stage) описанный в файле &lt;code&gt;.gitlab-ci.yml&lt;/code&gt;, который должен создавать и запускать docker-контейнеры, необходимые для сборки проекта.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitLab CI: Часть 4, этап spawn в .gitlab-ci.yml</title>
      <link>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-4-%D1%8D%D1%82%D0%B0%D0%BF-spawn-%D0%B2-.gitlab-ci.yml/</link>
      <pubDate>Thu, 25 May 2017 16:25:07 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-4-%D1%8D%D1%82%D0%B0%D0%BF-spawn-%D0%B2-.gitlab-ci.yml/</guid>
      <description>&lt;p&gt;В &lt;a href=&#34;https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-3-%D0%B2%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2-.gitlab-ci.yml/&#34;&gt;предыдущей статье&lt;/a&gt; цикла о настройке &lt;strong&gt;GitLab CI&lt;/strong&gt; мы познакомились со специальным файлом &lt;code&gt;.gitlab-ci.yml&lt;/code&gt;, в котором описываются инструкции для раннеров, рассмотрели несколько примеров и подготовили «скелет» для внедрения continuous integration в проекте.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitLab CI: Часть 3, введение в .gitlab-ci.yml</title>
      <link>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-3-%D0%B2%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2-.gitlab-ci.yml/</link>
      <pubDate>Mon, 15 May 2017 16:24:13 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-3-%D0%B2%D0%B2%D0%B5%D0%B4%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2-.gitlab-ci.yml/</guid>
      <description>&lt;p&gt;В &lt;a href=&#34;https://ealebed.github.io/posts/2017/gitlab-gitlab-ci-docker-registry-%D1%81-%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C%D1%8E-docker-compose/&#34;&gt;одной&lt;/a&gt; из предыдущих статей мы полностью подготовили фундамент для использования &lt;strong&gt;GitLab CI&lt;/strong&gt;, во &lt;a href=&#34;https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-1-%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA-%D1%80%D0%B0%D0%BD%D0%BD%D0%B5%D1%80%D0%BE%D0%B2/&#34;&gt;второй&lt;/a&gt; успешно зарегистрировали раннер (runner), который будет заниматься выполнением инструкций из специального файла &lt;code&gt;.gitlab-ci.yml&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitLab CI: Часть 2, специальные образы</title>
      <link>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-2-%D1%81%D0%BF%D0%B5%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B5-%D0%BE%D0%B1%D1%80%D0%B0%D0%B7%D1%8B/</link>
      <pubDate>Thu, 11 May 2017 16:23:46 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-2-%D1%81%D0%BF%D0%B5%D1%86%D0%B8%D0%B0%D0%BB%D1%8C%D0%BD%D1%8B%D0%B5-%D0%BE%D0%B1%D1%80%D0%B0%D0%B7%D1%8B/</guid>
      <description>&lt;p&gt;В &lt;a href=&#34;https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-1-%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA-%D1%80%D0%B0%D0%BD%D0%BD%D0%B5%D1%80%D0%BE%D0%B2/&#34;&gt;первой статье&lt;/a&gt; цикла о &lt;strong&gt;настройке GitLab Continuous Integration (GitLab CI)&lt;/strong&gt; мы упоминали о неких специфических docker-образах, которые будут использоваться в нашем конкретном примере при сборке проекта.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitLab CI: Часть 1, запуск раннеров (runners)</title>
      <link>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-1-%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA-%D1%80%D0%B0%D0%BD%D0%BD%D0%B5%D1%80%D0%BE%D0%B2/</link>
      <pubDate>Mon, 08 May 2017 16:23:21 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/gitlab-ci-%D1%87%D0%B0%D1%81%D1%82%D1%8C-1-%D0%B7%D0%B0%D0%BF%D1%83%D1%81%D0%BA-%D1%80%D0%B0%D0%BD%D0%BD%D0%B5%D1%80%D0%BE%D0%B2/</guid>
      <description>&lt;p&gt;В одной из &lt;a href=&#34;https://ealebed.github.io/posts/2017/gitlab-gitlab-ci-docker-registry-%D1%81-%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C%D1%8E-docker-compose/&#34;&gt;предыдущих статей&lt;/a&gt;, посвященных &lt;strong&gt;GitLab&lt;/strong&gt; — одной из самых популярных систем контроля версий и управления Git-репозиториями, — мы подготовили необходимый фундамент для настройки &lt;strong&gt;GitLab Continuous Integration (GitLab CI)&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gitlab в docker-контейнерах: резервное копирование</title>
      <link>https://ealebed.github.io/posts/2017/gitlab-%D0%B2-docker-%D0%BA%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D0%B0%D1%85-%D1%80%D0%B5%D0%B7%D0%B5%D1%80%D0%B2%D0%BD%D0%BE%D0%B5-%D0%BA%D0%BE%D0%BF%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5/</link>
      <pubDate>Thu, 04 May 2017 16:22:52 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/gitlab-%D0%B2-docker-%D0%BA%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D0%B0%D1%85-%D1%80%D0%B5%D0%B7%D0%B5%D1%80%D0%B2%D0%BD%D0%BE%D0%B5-%D0%BA%D0%BE%D0%BF%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5/</guid>
      <description>&lt;p&gt;Мы уже умеем запускать &lt;a href=&#34;https://ealebed.github.io/posts/2017/gitlab-gitlab-ci-docker-registry-%D1%81-%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C%D1%8E-docker-compose/&#34;&gt;&lt;strong&gt;Gitlab&lt;/strong&gt; со всеми необходимыми компонентами в docker-контейнерах&lt;/a&gt; с помощью &lt;code&gt;docker-compose&lt;/code&gt; и в полной мере оценили всю гибкость использования для этой цели контейнеров от &lt;a href=&#34;https://github.com/sameersbn/docker-gitlab&#34;&gt;sameersbn&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Поднимаем Gitlab в docker-контейнерах за Nginx</title>
      <link>https://ealebed.github.io/posts/2017/%D0%BF%D0%BE%D0%B4%D0%BD%D0%B8%D0%BC%D0%B0%D0%B5%D0%BC-gitlab-%D0%B2-docker-%D0%BA%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D0%B0%D1%85-%D0%B7%D0%B0-nginx/</link>
      <pubDate>Mon, 01 May 2017 16:22:28 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/%D0%BF%D0%BE%D0%B4%D0%BD%D0%B8%D0%BC%D0%B0%D0%B5%D0%BC-gitlab-%D0%B2-docker-%D0%BA%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D0%B0%D1%85-%D0%B7%D0%B0-nginx/</guid>
      <description>&lt;p&gt;Мы уже упоминали о &lt;strong&gt;GitLab&lt;/strong&gt; — одной из самых популярных систем контроля версий и управления Git-репозиториями с открытым исходным кодом и очень широкой функциональностью. Рассматривались варианты &lt;a href=&#34;https://ealebed.github.io/posts/2017/gitlab-%D0%BF%D0%B5%D1%80%D0%B5%D0%BD%D0%BE%D1%81-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85-%D1%81-omnibus-%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B8-%D0%B2-docker-%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D1%83/&#34;&gt;переноса &lt;strong&gt;GitLab&lt;/strong&gt; в docker-установку&lt;/a&gt; и &lt;a href=&#34;https://ealebed.github.io/posts/2017/gitlab-gitlab-ci-docker-registry-%D1%81-%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C%D1%8E-docker-compose/&#34;&gt;организация процесса CI&lt;/a&gt; с помощью &lt;code&gt;docker-compose&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Gitlab &#43; Gitlab CI &#43; Docker registry с помощью docker-compose</title>
      <link>https://ealebed.github.io/posts/2017/gitlab-gitlab-ci-docker-registry-%D1%81-%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C%D1%8E-docker-compose/</link>
      <pubDate>Mon, 17 Apr 2017 13:57:54 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/gitlab-gitlab-ci-docker-registry-%D1%81-%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C%D1%8E-docker-compose/</guid>
      <description>&lt;p&gt;В одной из предыдущих статей мы подробно рассматривали процесс &lt;a href=&#34;https://ealebed.github.io/posts/2017/gitlab-%D0%BF%D0%B5%D1%80%D0%B5%D0%BD%D0%BE%D1%81-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85-%D1%81-omnibus-%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B8-%D0%B2-docker-%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D1%83/&#34;&gt;переноса данных omnibus-установки в docker-установку&lt;/a&gt;, целью которого было избавление от головной боли при обновлениях Gitlab.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>GitLab: перенос данных с omnibus-установки в docker-установку</title>
      <link>https://ealebed.github.io/posts/2017/gitlab-%D0%BF%D0%B5%D1%80%D0%B5%D0%BD%D0%BE%D1%81-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85-%D1%81-omnibus-%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B8-%D0%B2-docker-%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D1%83/</link>
      <pubDate>Mon, 10 Apr 2017 13:57:12 +0200</pubDate>
      
      <guid>https://ealebed.github.io/posts/2017/gitlab-%D0%BF%D0%B5%D1%80%D0%B5%D0%BD%D0%BE%D1%81-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D1%85-%D1%81-omnibus-%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B8-%D0%B2-docker-%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D1%83/</guid>
      <description>&lt;p&gt;&lt;strong&gt;GitLab&lt;/strong&gt; — одна из самых популярных систем контроля версий и управления Git-репозиториями с открытым исходным кодом и очень широкой функциональностью. Процесс установки GitLab (будь-то omnibus, docker или &lt;a href=&#34;https://bitnami.com/stack/gitlab&#34;&gt;готовая виртуальная машина&lt;/a&gt;) хорошо задокументирован, поэтому рассматривать мы его не будем.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>